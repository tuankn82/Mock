pipeline {
  options {
    timestamps()
    timeout(time: 180, unit: 'MINUTES')
    disableConcurrentBuilds()
    buildDiscarder(logRotator(numToKeepStr: '250', daysToKeepStr: '5'))
  }
  agent any
  

  environment {
    AWS_ACCESS_KEY_ID     = credentials('PACKER_AWS_ACCESS_KEY')
    AWS_SECRET_ACCESS_KEY = credentials('PACKER_AWS_SECRET_KEY')
    WORK_SUB_DIR          = 'vm/infra/packer'
    JENKINS_USER_ID       = 'tuankn'
    JENKINS_API_TOKEN     = credentials('JENKIN_API_TOKEN')
  }
  // parameters {
  //   string(
  //     name: 'IMG_LABEL',
  //     defaultValue: 'latest',
  //     description: 'docker container image label name'
  //   )
  //   choice(
  //     name: 'PACKER_REMOTE_USER',
  //     choices: [
  //       'ubuntu',
  //     ],
  //     description: 'packer remote user'
  //   )
  //   choice(
  //     name: 'TERRAFORM_VERSION',
  //     choices: [
  //       '1.4.4',
  //     ],
  //     description: 'terraform version'
  //   )
  //   choice(
  //     name: 'PACKER_VERSION',
  //     choices: [
  //       '1.8.6',
  //     ],
  //     description: 'packer version'
  //   )
  // }
  stages {
    stage("terraform-apply") {
      steps {
          echo "tuankn"
      }
    }
    stage("packaging-image") {
      steps {
        echo "hangnt"
      }   
    }
  }
  post {
    cleanup {
      sh '''#!/usr/bin/env bash
        echo "Shell Process ID: $$"
        cd "${WORK_SUB_DIR}"
        bash scripts/post-cleanup.sh
      '''
    }
  }
}


